rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidMealEntry(userId) {
      return request.resource.data.keys().hasOnly([
        'imageUrl',
        'storagePath',
        'originalFileName',
        'createdAt',
        'ownerId',
      ])
      && request.resource.data.imageUrl is string
      && request.resource.data.storagePath is string
      && request.resource.data.ownerId == userId
      && (request.resource.data.originalFileName == null || request.resource.data.originalFileName is string)
      && request.resource.data.createdAt is timestamp;
    }

    match /users/{userId}/meals/{mealId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId) && isValidMealEntry(userId);
      allow update: if isOwner(userId) && isValidMealEntry(userId);
      allow delete: if isOwner(userId);
    }
  }
}
